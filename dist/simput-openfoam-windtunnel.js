!function(e){function n(t){if(l[t])return l[t].exports;var o=l[t]={exports:{},id:t,loaded:!1};return e[t].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var l={};return n.m=e,n.c=l,n.p="",n(0)}([function(e,n,l){(function(n){n.Simput||(n.Simput={}),n.Simput.types||(n.Simput.types={}),e.exports=n.Simput.types["openfoam-windtunnel"]=l(1)}).call(n,function(){return this}())},function(e,n,l){"use strict";e.exports={type:"openfoam-windtunnel",model:l(2),lang:l(3),convert:l(9),parse:null}},function(e,n){e.exports={order:["InitialConditions","WindTunnel","Parameters","Solvers","Decomposition","Mesh","Runtime"],views:{InitialConditions:{attributes:["initconst","initfields","transport"]},WindTunnel:{attributes:["wallBounds","wallAssign"]},Parameters:{attributes:["controldictTime","controldictWrite"]},Solvers:{attributes:["solver-p","solver-U","solver-k","solver-omega","correctors","relaxationFactors"]},Decomposition:{attributes:["decomposeParDict","decomposition_simpleCoeffs","decomposition_hierarchicalCoeffs","forceCoeffs"]},Mesh:{attributes:["meshQuality","meshRefinement"]},Runtime:{children:["castellatedMeshControls","snapControls","addLayersControls"]},castellatedMeshControls:{attributes:["castellatedMeshControls"]},snapControls:{attributes:["snapControls"]},addLayersControls:{attributes:["addLayersControls"]}},external:{meshName:"motorBike",meshBounds:[-.292,1.75,-.35,.332,-423e-7,1.35]},definitions:{initconst:{parameters:[{id:"initialConditions.flowVelocity",type:"double",size:3,layout:"3","default":[20,0,0]},{id:"initialConditions.pressure",type:"double",size:1,"default":[0]},{id:"initialConditions.turbulentKE",type:"double",size:1,"default":[.24]},{id:"initialConditions.turbulentOmega",type:"double",size:1,"default":[1.78]}]},initfields:{parameters:[{id:"fields.k.dimensions",type:"double",size:7,layout:"n","default":[0,2,-2,0,0,0,0]},{id:"fields.nut.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"fields.omega.dimensions",type:"double",size:7,layout:"n","default":[0,0,-1,0,0,0,0]},{id:"fields.p.dimensions",type:"double",size:7,layout:"n","default":[0,2,-2,0,0,0,0]},{id:"fields.U.dimensions",type:"double",size:7,layout:"n","default":[0,1,-1,0,0,0,0]},{id:"fields.U.inletValue",type:"double",size:3,layout:"3","default":[0,0,0]}]},transport:{parameters:[{id:"transport.model",type:"string",ui:"enum",size:1,"default":["Newtonian"],domain:{Newtonian:"Newtonian",BirdCarreau:"BirdCarreau",CrossPowerLaw:"CrossPowerLaw",powerLaw:"powerLaw",HerschelBulkley:"HerschelBulkley",Casson:"Casson"}},["Newtonian","BirdCarreau","CrossPowerLaw","powerLaw","HerschelBulkley","Casson"]],children:{Newtonian:"transport['transport.model'][0] === 'Newtonian'",BirdCarreau:"transport['transport.model'][0] === 'BirdCarreau'",CrossPowerLaw:"transport['transport.model'][0] === 'CrossPowerLaw'",powerLaw:"transport['transport.model'][0] === 'powerLaw'",HerschelBulkley:"transport['transport.model'][0] === 'HerschelBulkley'",Casson:"transport['transport.model'][0] === 'Casson'"}},Newtonian:{parameters:[{id:"Newtonian.nu.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"Newtonian.nu.epsilon",type:"double",size:1,"default":15e-6}]},BirdCarreau:{parameters:[{id:"BirdCarreau.nu0.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"BirdCarreau.nu0.epsilon",type:"double",size:1,"default":.001},{id:"BirdCarreau.nuInf.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"BirdCarreau.nuInf.epsilon",type:"double",size:1,"default":1e-5},{id:"BirdCarreau.k.dimensions",type:"double",size:7,layout:"n","default":[0,0,1,0,0,0,0]},{id:"BirdCarreau.k.epsilon",type:"double",size:1,"default":1},{id:"BirdCarreau.n.dimensions",type:"double",size:7,layout:"n","default":[0,0,0,0,0,0,0]},{id:"BirdCarreau.n.epsilon",type:"double",size:1,"default":.5}]},CrossPowerLaw:{parameters:[{id:"CrossPowerLaw.nu0.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"CrossPowerLaw.nu0.epsilon",type:"double",size:1,"default":.001},{id:"CrossPowerLaw.nuInf.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"CrossPowerLaw.nuInf.epsilon",type:"double",size:1,"default":1e-5},{id:"CrossPowerLaw.m.dimensions",type:"double",size:7,layout:"n","default":[0,0,1,0,0,0,0]},{id:"CrossPowerLaw.m.epsilon",type:"double",size:1,"default":1},{id:"CrossPowerLaw.n.dimensions",type:"double",size:7,layout:"n","default":[0,0,0,0,0,0,0]},{id:"CrossPowerLaw.n.epsilon",type:"double",size:1,"default":.5}]},powerLaw:{parameters:[{id:"powerLaw.nuMax.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"powerLaw.nuMax.epsilon",type:"double",size:1,"default":.001},{id:"powerLaw.nuMin.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"powerLaw.nuMin.epsilon",type:"double",size:1,layout:"n","default":1e-5},{id:"powerLaw.k.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"powerLaw.k.epsilon",type:"double",size:1,"default":1e-5},{id:"powerLaw.n.dimensions",type:"double",size:7,layout:"n","default":[0,0,0,0,0,0,0]},{id:"powerLaw.n.epsilon",type:"double",size:1,"default":1}]},HerschelBulkley:{parameters:[{id:"HerschelBulkley.nu0.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"HerschelBulkley.nu0.epsilon",type:"double",size:1,"default":.001},{id:"HerschelBulkley.tau0.dimensions",type:"double",size:7,layout:"n","default":[0,2,-2,0,0,0,0]},{id:"HerschelBulkley.tau0.epsilon",type:"double",size:1,"default":1},{id:"HerschelBulkley.k.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"HerschelBulkley.k.epsilon",type:"double",size:1,"default":1e-5},{id:"HerschelBulkley.n.dimensions",type:"double",size:7,layout:"n","default":[0,0,0,0,0,0,0]},{id:"HerschelBulkley.n.epsilon",type:"double",size:1,"default":1}]},Casson:{parameters:[{id:"Casson.m.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"Casson.m.epsilon",type:"double",size:1,"default":3934986e-12},{id:"Casson.tau0.dimensions",type:"double",size:7,layout:"n","default":[0,2,-2,0,0,0,0]},{id:"Casson.tau0.epsilon",type:"double",size:1,"default":29032e-10},{id:"Casson.nuMax.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"Casson.nuMax.epsilon",type:"double",size:1,"default":133333e-10},{id:"Casson.nuMin.dimensions",type:"double",size:7,layout:"n","default":[0,2,-1,0,0,0,0]},{id:"Casson.nuMin.epsilon",type:"double",size:1,"default":39047e-10}]},wallBounds:{parameters:[{id:"tunnel.bounds.x",type:"double",size:2,layout:"2","default":[-5,15]},{id:"tunnel.bounds.y",type:"double",size:2,layout:"2","default":[-4,4]},{id:"tunnel.bounds.z",type:"double",size:2,layout:"2","default":[0,8]}]},wallAssign:{parameters:[{id:"tunnel.walls.x.plus",type:"string",ui:"enum",size:1,"default":["outlet"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.x.minus",type:"string",ui:"enum",size:1,"default":["inlet"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.y.plus",type:"string",ui:"enum",size:1,"default":["rightWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.y.minus",type:"string",ui:"enum",size:1,"default":["leftWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.z.plus",type:"string",ui:"enum",size:1,"default":["topWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.z.minus",type:"string",ui:"enum",size:1,"default":["bottomWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}}]},controldictTime:{parameters:[{id:"controldictTimeStartFrom",type:"string",ui:"enum",size:1,"default":["startTime"],domain:{startTime:"startTime",firstTime:"firstTime",latestTime:"latestTime"}},{id:"controldict.time.startTime",type:"double",size:1,"default":[0],show:"controldictTimeStartFrom[0] === 'startTime'"},{id:"controldict.time.end",type:"double",size:1,"default":[500]},{id:"controldict.time.delta",type:"double",size:1,"default":[1]}]},controldictWrite:{parameters:[{id:"controldict.write.control",type:"string",ui:"enum",size:1,"default":["timeStep"],domain:{timeStep:"timeStep",runTime:"runTime",adjustableRunTime:"adjustableRunTime",cpuTime:"cpuTime",clockTime:"clockTime"}},{id:"controldict.write.interval",type:"double",size:1,"default":[100]},{id:"controldict.write.format",type:"string",ui:"enum",size:1,"default":["binary"],domain:{ascii:"ascii",binary:"binary"}},{id:"controldict.write.precision",type:"integer",size:1,"default":[6]},{id:"controldict.write.gzip",type:"string",ui:"enum",size:1,"default":["yes"],domain:{yes:"yes",no:"no"}},{id:"controldict.write.time.format",type:"string",ui:"enum",size:1,"default":["general"],domain:{general:"general",fixed:"fixed",scientific:"scientific"}},{id:"controldict.write.time.precision",type:"integer",size:1,"default":[6]},{id:"controldict.write.graph.format",type:"string",ui:"enum",size:1,"default":["raw"],domain:{raw:"raw",gnuplot:"gnuplot",xmgr:"xmgr",jplot:"jplot"}}]},decomposeParDict:{parameters:[{id:"decomposeParDict.subdomains",type:"integer",size:1,"default":[6]},{id:"decomposeParDict.method",type:"string",ui:"enum",size:1,"default":["hierarchical"],domain:{hierarchical:"hierarchical",ptscotch:"ptscotch"}}]},decomposition_simpleCoeffs:{parameters:[{id:"decomposeParDict.simpleCoeffs.n",type:"double",size:3,layout:"3","default":[4,1,1]},{id:"decomposeParDict.simpleCoeffs.delta",type:"double",size:1,"default":[.001]}]},decomposition_hierarchicalCoeffs:{parameters:[{id:"decomposeParDict.hierarchicalCoeffs.n",type:"double",size:3,layout:"3","default":[3,2,1]},{id:"decomposeParDict.hierarchicalCoeffs.delta",type:"double",size:1,"default":[.001]},{id:"decomposeParDict.hierarchicalCoeffs.order",type:"string",ui:"enum",size:1,"default":["xyz"],domain:{xyz:"xyz",xzy:"xzy",yxz:"yxz",yzx:"yzx",zyx:"zyx",zxy:"zxy"}}]},forceCoeffs:{parameters:[{id:"forceCoeffs.write.control",type:"string",ui:"enum",size:1,"default":["timeStep"],domain:{timeStep:"timeStep",runTime:"runTime",adjustableRunTime:"adjustableRunTime",cpuTime:"cpuTime",clockTime:"clockTime"}},{id:"forceCoeffs.write.interval",type:"double",size:1,"default":[1]},{id:"forceCoeffs.write.log",type:"string",ui:"enum",size:1,"default":["yes"],domain:{yes:"yes",no:"no"}},{id:"forceCoeffs.liftDir",type:"double",size:3,layout:"3","default":[0,0,1]},{id:"forceCoeffs.dragDir",type:"double",size:3,layout:"3","default":[1,0,0]},{id:"forceCoeffs.CofR",type:"double",size:3,layout:"3","default":[.72,0,0]},{id:"forceCoeffs.pitchAxis",type:"double",size:3,layout:"3","default":[0,1,0]},{id:"forceCoeffs.magUInf",type:"double",size:1,"default":[20]},{id:"forceCoeffs.lRef",type:"double",size:1,"default":[1.42]},{id:"forceCoeffs.Aref",type:"double",size:1,"default":[.75]}]},"solver-p":{parameters:[{id:"solver.p.solver",type:"string",ui:"enum",size:1,"default":["GAMG"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.p.smoother",type:"string",ui:"enum",size:1,"default":["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel","symmetric Gauss-Seidel":"symGaussSeidel","diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)":"DIC/DILU","diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)":"DICGaussSeidel"}},{id:"solver.p.tolerance",type:"double",size:1,"default":[1e-7]},{id:"solver.p.relTol",type:"double",size:1,"default":[.01]}]},"solver-U":{parameters:[{id:"solver.U.solver",type:"string",ui:"enum",size:1,"default":["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.U.smoother",type:"string",ui:"enum",size:1,"default":["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.U.tolerance",type:"double",size:1,"default":[1e-8]},{id:"solver.U.relTol",type:"double",size:1,"default":[.1]},{id:"solver.U.nSweeps",type:"integer",size:1,"default":[1]}]},"solver-k":{parameters:[{id:"solver.k.solver",type:"string",ui:"enum",size:1,"default":["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.k.smoother",type:"string",ui:"enum",size:1,"default":["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.k.tolerance",type:"double",size:1,"default":[1e-8]},{id:"solver.k.relTol",type:"double",size:1,"default":[.1]},{id:"solver.k.nSweeps",type:"integer",size:1,"default":[1]}]},"solver-omega":{parameters:[{id:"solver.omega.solver",type:"string",ui:"enum",size:1,"default":["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.omega.smoother",type:"string",ui:"enum",size:1,"default":["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.omega.tolerance",type:"double",size:1,"default":[1e-8]},{id:"solver.omega.relTol",type:"double",size:1,"default":[.1]},{id:"solver.omega.nSweeps",type:"integer",size:1,"default":[1]}]},correctors:{parameters:[{id:"correctors.simple.nNonOrthogonalCorrectors",type:"double",size:1,"default":[0]},{id:"correctors.simple..consistent",type:"string",ui:"enum",size:1,"default":["yes"],domain:{yes:"yes",no:"no"}},{id:"correctors.potentialFlow.nNonOrthogonalCorrectors",type:"double",size:1,"default":[10]}]},relaxationFactors:{parameters:[{id:"relaxationFactors.equations.U",type:"double",size:1,"default":[.9]},{id:"relaxationFactors.equations.k",type:"double",size:1,"default":[.7]},{id:"relaxationFactors.equations.omega",type:"double",size:1,"default":[.7]}]},meshQuality:{parameters:[{id:"meshQuality.minFaceWeight",type:"double",size:1,"default":[.02]}]},meshRefinement:{parameters:[{id:"meshRefinement.refinementBox.type",type:"string",ui:"enum",size:1,"default":["searchableBox"],domain:{searchableBox:"searchableBox",searchableSphere:"searchableSphere"}},["searchableBox","searchableSphere"]],children:{searchableBox:"meshRefinement['meshRefinement.refinementBox.type'][0] === 'searchableBox'",searchableSphere:"meshRefinement['meshRefinement.refinementBox.type'][0] === 'searchableSphere'"}},searchableBox:{parameters:[{id:"meshRefinement.refinementBox.min",type:"double",size:3,layout:"3","default":[-1,-.7,0]},{id:"meshRefinement.refinementBox.max",type:"double",size:3,layout:"3","default":[8,.7,2.5]}]},searchableSphere:{parameters:[{id:"meshRefinement.refinementSphere.center",type:"double",size:3,layout:"3","default":[0,0,0]},{id:"meshRefinement.refinementSphere.radius",type:"double",size:1,"default":[1.05]}]},runtime:{parameters:[{id:"runtime.step",type:"string",ui:"enum",size:1,"default":["castellatedMesh"],domain:{castellatedMesh:"castellatedMesh",snap:"snap",addLayers:"addLayers"}},["castellatedMeshControls","snapControls","addLayersControls"]],children:{castellatedMeshControls:"runtime['runtime.step'][0] === 'castellatedMesh'",snapControls:"runtime['runtime.step'][0] === 'snap'",addLayersControls:"runtime['runtime.step'][0] === 'addLayers'"}},castellatedMeshControls:{parameters:[{id:"castellatedMeshControls.maxLocalCells",type:"integer",size:1,"default":[1e5]},{id:"castellatedMeshControls.maxGlobalCells",type:"integer",size:1,"default":[2e6]},{id:"castellatedMeshControls.minRefinementCells",type:"integer",size:1,"default":[10]},{id:"castellatedMeshControls.maxLoadUnbalance",type:"double",size:1,"default":[.1]},{id:"castellatedMeshControls.nCellsBetweenLevels",type:"integer",size:1,"default":[3]},{id:"castellatedMeshControls.resolveFeatureAngle",type:"integer",size:1,"default":[30]},{id:"castellatedMeshControls.locationInMesh",type:"double",size:3,layout:"3","default":[3.0001,3.0001,.43]},{id:"castellatedMeshControls.allowFreeStandingZoneFaces",type:"string",ui:"enum",size:1,"default":["true"],domain:{"true":"true","false":"false"}}]},snapControls:{parameters:[{id:"snapControls.nSmoothPatch",type:"double",size:1,"default":[3]},{id:"snapControls.tolerance",type:"double",size:1,"default":[2]},{id:"snapControls.nSolveIter",type:"integer",size:1,"default":[30]},{id:"snapControls.nRelaxIter",type:"integer",size:1,"default":[5]},{id:"snapControls.nFeatureSnapIter",type:"integer",size:1,"default":[10]},{id:"snapControls.implicitFeatureSnap",type:"string",ui:"enum",size:1,"default":["false"],domain:{"true":"true","false":"false"}},{id:"snapControls.explicitFeatureSnap",type:"string",ui:"enum",size:1,"default":["true"],domain:{"true":"true","false":"false"}},{id:"snapControls.multiRegionFeatureSnap",type:"string",ui:"enum",size:1,"default":["false"],domain:{"true":"true","false":"false"}}]},addLayersControls:{parameters:[{id:"addLayersControls.relativeSizes",type:"string",ui:"enum",size:1,"default":["true"],domain:{"true":"true","false":"false"}},{id:"addLayersControls.expansionRatio",type:"double",size:1,"default":[1]},{id:"addLayersControls.finalLayerThickness",type:"double",size:1,"default":[.3]},{id:"addLayersControls.minThickness",type:"double",size:1,"default":[.1]},{id:"addLayersControls.nGrow",type:"double",size:1,"default":[0]},{id:"addLayersControls.featureAngle",type:"double",size:1,"default":[60]},{id:"addLayersControls.slipFeatureAngle",type:"double",size:1,"default":[30]},{id:"addLayersControls.nRelaxIter",type:"integer",size:1,"default":[3]},{id:"addLayersControls.nSmoothSurfaceNormals",type:"double",size:1,"default":[1]},{id:"addLayersControls.nSmoothNormals",type:"double",size:1,"default":[3]},{id:"addLayersControls.nSmoothThickness",type:"double",size:1,"default":[10]},{id:"addLayersControls.maxFaceThicknessRatio",type:"double",size:1,"default":[.5]},{id:"addLayersControls.maxThicknessToMedialRatio",type:"double",size:1,"default":[.3]},{id:"addLayersControls.minMedianAxisAngle",type:"double",size:1,"default":[90]},{id:"addLayersControls.nBufferCellsNoExtrude",type:"integer",size:1,"default":[0]},{id:"addLayersControls.nLayerIter",type:"integer",size:1,"default":[50]}]}}}},function(e,n,l){"use strict";e.exports={en:l(4)}},function(e,n,l){"use strict";e.exports={help:l(5),"label.json":l(8)}},function(e,n,l){"use strict";e.exports={example:l(6)}},function(e,n,l){"use strict";e.exports={"example.path":l(7)}},function(e,n){e.exports="<p>Choose the path to the corresponding example of the OpenFOAM tutorial</p> "},function(e,n){e.exports={views:{InitialConditions:"Boundary conditions",WindTunnel:"Wind tunnel definition",Parameters:"Parameters",Solvers:"Solvers",Decomposition:"Decomposition",Mesh:"Mesh generation",Runtime:"Runtime",castellatedMeshControls:"Castellated Mesh Controls",snapControls:"Snap Controls",addLayersControls:"Add layers Controls"},attributes:{initconst:{title:"Initial conditions",parameters:{"initialConditions.flowVelocity":"Flow veolicty","initialConditions.pressure":"Pressure","initialConditions.turbulentKE":"Turbulent KE","initialConditions.turbulentOmega":"Turbulent Omega"}},initfields:{title:"Fields initialisation",parameters:{"fields.k.dimensions":"Dimensions for k","fields.nut.dimensions":"Dimensions for nut","fields.omega.dimensions":"Dimensions for omega","fields.p.dimensions":"Dimensions for p","fields.U.dimensions":"Dimensions for U","fields.U.inletValue":"Inlet value for U"}},transport:{title:"Transport settings",parameters:{"transport.model":"Model"}},Newtonian:{title:"Newtonian",parameters:{"Newtonian.nu.dimensions":"Nu","Newtonian.nu.epsilon":"Nu Epsilon"}},BirdCarreau:{title:"BirdCarreau",parameters:{"BirdCarreau.nu0.dimensions":"Nu0","BirdCarreau.nu0.epsilon":"Nu0 Epsilon","BirdCarreau.nuInf.dimensions":"Nu Inf","BirdCarreau.nuInf.epsilon":"Nu Inf Epsilon","BirdCarreau.k.dimensions":"k","BirdCarreau.k.epsilon":"k Epsilon","BirdCarreau.n.dimensions":"n","BirdCarreau.n.epsilon":"n Epsilon"}},CrossPowerLaw:{title:"CrossPowerLaw",parameters:{"CrossPowerLaw.nu0.dimensions":"Nu 0","CrossPowerLaw.nu0.epsilon":"Nu 0 Epsilon","CrossPowerLaw.nuInf.dimensions":"Nu Inf","CrossPowerLaw.nuInf.epsilon":"Nu Inf Epsilon","CrossPowerLaw.m.dimensions":"m","CrossPowerLaw.m.epsilon":"m Epsilon","CrossPowerLaw.n.dimensions":"n","CrossPowerLaw.n.epsilon":"n Epsilon"}},powerLaw:{title:"powerLaw",parameters:{"powerLaw.nuMax.dimensions":"Nu Max","powerLaw.nuMax.epsilon":"Nu Max Epsilon","powerLaw.nuMin.dimensions":"Nu Min","powerLaw.nuMin.epsilon":"Nu Min Epsilon","powerLaw.k.dimensions":"k","powerLaw.k.epsilon":"k Epsilon","powerLaw.n.dimensions":"n","powerLaw.n.epsilon":"n Epsilon"}},HerschelBulkley:{title:"HerschelBulkley",parameters:{"HerschelBulkley.nu0.dimensions":"Nu 0","HerschelBulkley.nu0.epsilon":"Nu 0 Epsilon","HerschelBulkley.tau0.dimensions":"Tau 0","HerschelBulkley.tau0.epsilon":"Tau 0 Epsilon","HerschelBulkley.k.dimensions":"k","HerschelBulkley.k.epsilon":"k Epsilon","HerschelBulkley.n.dimensions":"n","HerschelBulkley.n.epsilon":"n Epsilon"}},Casson:{title:"Casson",parameters:{"Casson.m.dimensions":"m","Casson.m.epsilon":"m Epsilon","Casson.tau0.dimensions":"Tau 0","Casson.tau0.epsilon":"Tau 0 Epsilon","Casson.nuMax.dimensions":"nuMax","Casson.nuMax.epsilon":"nuMax Epsilon","Casson.nuMin.dimensions":"nuMin","Casson.nuMin.epsilon":"nuMin Epsilon"}},wallBounds:{title:"Bounds of wind tunnel",parameters:{"tunnel.bounds.x":"X (min, max)","tunnel.bounds.y":"Y (min, max)","tunnel.bounds.z":"Z (min, max)"}},wallAssign:{title:"Walls orientations",parameters:{"tunnel.walls.x.plus":"Wall normal to X (positive side)","tunnel.walls.x.minus":"Wall normal to X (negative side)","tunnel.walls.y.plus":"Wall normal to Y (positive side)","tunnel.walls.y.minus":"Wall normal to Y (negative side)","tunnel.walls.z.plus":"Wall normal to Z (positive side)","tunnel.walls.z.minus":"Wall normal to Z (negative side)"}},controldictTime:{title:"Time control",parameters:{"controldict.time.startFrom":"Start time of the simulation","controldict.time.startTime":"Start time","controldict.time.end":"End time","controldict.time.delta":"Delta time"}},controldictWrite:{title:"Output parameters",parameters:{"controldict.write.control":"Write control","controldict.write.interval":"Write interval","controldict.write.format":"Write format","controldict.write.precision":"Write precision","controldict.write.gzip":"Compress","controldict.write.time.format":"Time format","controldict.write.time.precision":"Time precision","controldict.write.graph.format":"Graph format"}},decomposeParDict:{title:"Decomposition",parameters:{"decomposeParDict.subdomains":"Number of subdomains","decomposeParDict.method":"Method"}},decomposition_simpleCoeffs:{title:"Simple Coeffs",parameters:{"decomposeParDict.simpleCoeffs.n":"N","decomposeParDict.simpleCoeffs.delta":"Delta"}},decomposition_hierarchicalCoeffs:{title:"Hierarchical Coeffs",parameters:{"decomposeParDict.hierarchicalCoeffs.n":"N","decomposeParDict.hierarchicalCoeffs.delta":"Delta","decomposeParDict.hierarchicalCoeffs.order":"Order"}},forceCoeffs:{title:"Force analysis",parameters:{"forceCoeffs.write.control":"Write control","forceCoeffs.write.interval":"Write interval","forceCoeffs.write.log":"Log","forceCoeffs.liftDir":"liftDir","forceCoeffs.dragDir":"dragDir","forceCoeffs.CofR":"CofR","forceCoeffs.pitchAxis":"pitchAxis","forceCoeffs.magUInf":"magUInf","forceCoeffs.lRef":"lRef","forceCoeffs.Aref":"Aref"}},"solver-p":{title:"p",parameters:{"solver.p.solver":"Solver type","solver.p.smoother":"Smoother","solver.p.tolerance":"Tolerance","solver.p.relTol":"Relative Tolerance"}},"solver-U":{title:"U",parameters:{"solver.U.solver":"Solver type","solver.U.smoother":"Smoother","solver.U.tolerance":"Tolerance","solver.U.relTol":"Relative Tolerance","solver.U.nSweeps":"nSweeps"}},"solver-k":{title:"k",parameters:{"solver.k.solver":"Solver type","solver.k.smoother":"Smoother","solver.k.tolerance":"Tolerance","solver.k.relTol":"Relative Tolerance","solver.k.nSweeps":"nSweeps"}},"solver-omega":{title:"omega",parameters:{"solver.omega.solver":"Solver type","solver.omega.smoother":"Smoother","solver.omega.tolerance":"Tolerance","solver.omega.relTol":"Relative Tolerance","solver.omega.nSweeps":"nSweeps"}},correctors:{title:"Correctors",parameters:{"correctors.simple.nNonOrthogonalCorrectors":"Simple nNonOrthogonalCorrectors","correctors.simple..consistent":"Simple consistent","correctors.potentialFlow.nNonOrthogonalCorrectors":"PotentialFlow nNonOrthogonalCorrectors"}},relaxationFactors:{title:"Relaxation Factors",parameters:{"relaxationFactors.equations.U":"U","relaxationFactors.equations.k":"k","relaxationFactors.equations.omega":"omega"}},meshQuality:{title:"Mesh quality",parameters:{"meshQuality.minFaceWeight":"minFaceWeight"}},meshRefinement:{title:"Mesh Refinement",parameters:{"meshRefinement.refinementBox.type":"Type"}},searchableBox:{title:"Box",parameters:{"meshRefinement.refinementBox.min":"Refinement Box (min[x,y,z])","meshRefinement.refinementBox.max":"Refinement Box (max[x,y,z])"}},searchableSphere:{title:"Sphere",parameters:{"meshRefinement.refinementSphere.center":"Refinement Sphere (center)","meshRefinement.refinementSphere.radius":"Refinement Sphere (radius)"}},runtime:{title:"Runtime step",parameters:{"runtime.step":"Type"}},castellatedMeshControls:{title:"Castellated Mesh Controls",parameters:{"castellatedMeshControls.maxLocalCells":"maxLocalCells","castellatedMeshControls.maxGlobalCells":"maxGlobalCells","castellatedMeshControls.minRefinementCells":"minRefinementCells","castellatedMeshControls.maxLoadUnbalance":"maxLoadUnbalance","castellatedMeshControls.nCellsBetweenLevels":"nCellsBetweenLevels","castellatedMeshControls.resolveFeatureAngle":"resolveFeatureAngle","castellatedMeshControls.locationInMesh":"locationInMesh","castellatedMeshControls.allowFreeStandingZoneFaces":"allowFreeStandingZoneFaces"}},snapControls:{title:"Snap Controls",parameters:{"snapControls.nSmoothPatch":"nSmoothPatch","snapControls.tolerance":"tolerance","snapControls.nSolveIter":"nSolveIter","snapControls.nRelaxIter":"nRelaxIter","snapControls.nFeatureSnapIter":"nFeatureSnapIter","snapControls.implicitFeatureSnap":"implicitFeatureSnap","snapControls.explicitFeatureSnap":"explicitFeatureSnap","snapControls.multiRegionFeatureSnap":"multiRegionFeatureSnap"}},addLayersControls:{title:"Add layers Controls",parameters:{"addLayersControls.relativeSizes":"relativeSizes","addLayersControls.expansionRatio":"expansionRatio","addLayersControls.finalLayerThickness":"finalLayerThickness","addLayersControls.minThickness":"minThickness","addLayersControls.nGrow":"nGrow","addLayersControls.featureAngle":"featureAngle","addLayersControls.slipFeatureAngle":"slipFeatureAngle","addLayersControls.nRelaxIter":"nRelaxIter","addLayersControls.nSmoothSurfaceNormals":"nSmoothSurfaceNormals","addLayersControls.nSmoothNormals":"nSmoothNormals","addLayersControls.nSmoothThickness":"nSmoothThickness","addLayersControls.maxFaceThicknessRatio":"maxFaceThicknessRatio","addLayersControls.maxThicknessToMedialRatio":"maxThicknessToMedialRatio","addLayersControls.minMedianAxisAngle":"minMedianAxisAngle","addLayersControls.nBufferCellsNoExtrude":"nBufferCellsNoExtrude","addLayersControls.nLayerIter":"nLayerIter"}}}}},function(e,n,l){"use strict";var t={"0.orig/include/fixedInlet":l(10),"0.orig/include/frontBackUpperPatches":l(30),"0.orig/include/initialConditions":l(31),"0.orig/k":l(33),"0.orig/nut":l(34),"0.orig/omega":l(35),"0.orig/p":l(36),"0.orig/U":l(37),"constant/transportProperties":l(38),"constant/turbulenceProperties":l(39),"system/blockMeshDict":l(40),"system/controlDict":l(43),"system/decomposeParDict":l(44),"system/forceCoeffs":l(45),"system/fvSchemes":l(46),"system/fvSolution":l(47),"system/meshQualityDict":l(48),"system/snappyHexMeshDict":l(49),"system/surfaceFeatureExtractDict":l(50),Allclean:l(51),Allrun:l(52)};e.exports=function(e){var n={},l=[],o={initialConditions:{flowVelocity:[20,0,0],pressure:0,turbulentKE:.24,turbulentOmega:1.78},meshGroupName:"motorBikeGroup",k:{dimensions:[0,2,-2,0,0,0,0]},nut:{dimensions:[0,2,-1,0,0,0,0]},omega:{dimensions:[0,0,-1,0,0,0,0]},p:{dimensions:[0,2,-2,0,0,0,0]},U:{dimensions:[0,1,-1,0,0,0,0],inletValue:[0,0,0]},transport:{model:"Newtonian",dimensions:[0,2,-1,0,0,0,0],epsilon:15e-6},tunnel:{bounds:[-5,15,-4,4,0,8],simpleGrading:[1,1,1],walls:{x:{plus:"outlet",minus:"inlet"},y:{plus:"rightWall",minus:"leftWall"},z:{plus:"topWall",minus:"bottomWall"}}},controls:{startTime:0,endTime:500,deltaT:1,writeControl:"timeStep",writeInterval:100,purgeWrite:0,writeFormat:"binary",writePrecision:6,writeCompression:"uncompressed",timeFormat:"general",timePrecision:6,runTimeModifiable:"true"},decompose:{numberOfSubdomains:6,method:"hierarchical",simpleCoeffs:{n:[4,1,1],delta:.001},hierarchicalCoeffs:{n:[3,2,1],delta:.001,order:"xyz"}},forceCoeffs:{writeControl:"timeStep",timeInterval:1,log:"yes",patches:["motorBikeGroup"],liftDir:[0,0,1],dragDir:[1,0,0],CofR:[.72,0,0],pitchAxis:[0,1,0],magUInf:20,lRef:1.42,Aref:.75},solvers:{p:{solver:"GAMG",tolerance:1e-7,relTol:.01,smoother:"GaussSeidel"},U:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},k:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},omega:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},correctors:{simple:{nNonOrthogonalCorrectors:0,consistent:"yes"},potentialFlow:{nNonOrthogonalCorrectors:10}}},relaxationFactors:{equations:{U:.9,k:.7,omega:.7}},meshQuality:{minFaceWeight:.02},hexMesh:{steps:["castellatedMesh","snap","addLayers"],geometry:{name:"motorBike",refinementBox:{type:"searchableBox",min:[-1,-.7,0],max:[8,.7,2.5]}},castellatedMeshControls:{maxLocalCells:1e5,maxGlobalCells:2e6,minRefinementCells:10,maxLoadUnbalance:.1,nCellsBetweenLevels:3,resolveFeatureAngle:30,locationInMesh:[3.0001,3.0001,.43],allowFreeStandingZoneFaces:"true"},snapControls:{nSmoothPatch:3,tolerance:2,nSolveIter:30,nRelaxIter:5,nFeatureSnapIter:10,implicitFeatureSnap:"false",explicitFeatureSnap:"true",multiRegionFeatureSnap:"false"},addLayersControls:{relativeSizes:"true",expansionRatio:1,finalLayerThickness:.3,minThickness:.1,nGrow:0,featureAngle:60,slipFeatureAngle:30,nRelaxIter:3,nSmoothSurfaceNormals:1,nSmoothNormals:3,nSmoothThickness:10,maxFaceThicknessRatio:.5,maxThicknessToMedialRatio:.3,minMedianAxisAngle:90,nBufferCellsNoExtrude:0,nLayerIter:50}}};return Object.keys(t).forEach(function(e){try{n[e]=t[e](o)}catch(a){var r="Error trying to convert model for generating "+e;l.push(r),console.log(r,a)}}),l.length||(l=null),{results:n,error:l,model:e}}},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\ninlet\n{\n    type  fixedValue;\n    value $internalField;\n}\n\n// ************************************************************************* //\n";
},useData:!0})},function(e,n,l){e.exports=l(12)["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}function o(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&(n[l]=e[l]);return n["default"]=e,n}function a(){var e=new i.HandlebarsEnvironment;return p.extend(e,i),e.SafeString=u["default"],e.Exception=c["default"],e.Utils=p,e.escapeExpression=p.escapeExpression,e.VM=h,e.template=function(n){return h.template(n,e)},e}n.__esModule=!0;var r=l(13),i=o(r),s=l(27),u=t(s),d=l(15),c=t(d),m=l(14),p=o(m),f=l(28),h=o(f),y=l(29),g=t(y),v=a();v.create=a,g["default"](v),v["default"]=v,n["default"]=v,e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}function o(e,n,l){this.helpers=e||{},this.partials=n||{},this.decorators=l||{},s.registerDefaultHelpers(this),u.registerDefaultDecorators(this)}n.__esModule=!0,n.HandlebarsEnvironment=o;var a=l(14),r=l(15),i=t(r),s=l(16),u=l(24),d=l(26),c=t(d),m="4.0.5";n.VERSION=m;var p=7;n.COMPILER_REVISION=p;var f={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};n.REVISION_CHANGES=f;var h="[object Object]";o.prototype={constructor:o,logger:c["default"],log:c["default"].log,registerHelper:function(e,n){if(a.toString.call(e)===h){if(n)throw new i["default"]("Arg not supported with multiple helpers");a.extend(this.helpers,e)}else this.helpers[e]=n},unregisterHelper:function(e){delete this.helpers[e]},registerPartial:function(e,n){if(a.toString.call(e)===h)a.extend(this.partials,e);else{if("undefined"==typeof n)throw new i["default"]('Attempting to register a partial called "'+e+'" as undefined');this.partials[e]=n}},unregisterPartial:function(e){delete this.partials[e]},registerDecorator:function(e,n){if(a.toString.call(e)===h){if(n)throw new i["default"]("Arg not supported with multiple decorators");a.extend(this.decorators,e)}else this.decorators[e]=n},unregisterDecorator:function(e){delete this.decorators[e]}};var y=c["default"].log;n.log=y,n.createFrame=a.createFrame,n.logger=c["default"]},function(e,n){"use strict";function l(e){return d[e]}function t(e){for(var n=1;n<arguments.length;n++)for(var l in arguments[n])Object.prototype.hasOwnProperty.call(arguments[n],l)&&(e[l]=arguments[n][l]);return e}function o(e,n){for(var l=0,t=e.length;l<t;l++)if(e[l]===n)return l;return-1}function a(e){if("string"!=typeof e){if(e&&e.toHTML)return e.toHTML();if(null==e)return"";if(!e)return e+"";e=""+e}return m.test(e)?e.replace(c,l):e}function r(e){return!e&&0!==e||!(!h(e)||0!==e.length)}function i(e){var n=t({},e);return n._parent=e,n}function s(e,n){return e.path=n,e}function u(e,n){return(e?e+".":"")+n}n.__esModule=!0,n.extend=t,n.indexOf=o,n.escapeExpression=a,n.isEmpty=r,n.createFrame=i,n.blockParams=s,n.appendContextPath=u;var d={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},c=/[&<>"'`=]/g,m=/[&<>"'`=]/,p=Object.prototype.toString;n.toString=p;var f=function(e){return"function"==typeof e};f(/x/)&&(n.isFunction=f=function(e){return"function"==typeof e&&"[object Function]"===p.call(e)}),n.isFunction=f;var h=Array.isArray||function(e){return!(!e||"object"!=typeof e)&&"[object Array]"===p.call(e)};n.isArray=h},function(e,n){"use strict";function l(e,n){var o=n&&n.loc,a=void 0,r=void 0;o&&(a=o.start.line,r=o.start.column,e+=" - "+a+":"+r);for(var i=Error.prototype.constructor.call(this,e),s=0;s<t.length;s++)this[t[s]]=i[t[s]];Error.captureStackTrace&&Error.captureStackTrace(this,l);try{o&&(this.lineNumber=a,Object.defineProperty?Object.defineProperty(this,"column",{value:r}):this.column=r)}catch(u){}}n.__esModule=!0;var t=["description","fileName","lineNumber","message","name","number","stack"];l.prototype=new Error,n["default"]=l,e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}function o(e){r["default"](e),s["default"](e),d["default"](e),m["default"](e),f["default"](e),y["default"](e),v["default"](e)}n.__esModule=!0,n.registerDefaultHelpers=o;var a=l(17),r=t(a),i=l(18),s=t(i),u=l(19),d=t(u),c=l(20),m=t(c),p=l(21),f=t(p),h=l(22),y=t(h),g=l(23),v=t(g)},function(e,n,l){"use strict";n.__esModule=!0;var t=l(14);n["default"]=function(e){e.registerHelper("blockHelperMissing",function(n,l){var o=l.inverse,a=l.fn;if(n===!0)return a(this);if(n===!1||null==n)return o(this);if(t.isArray(n))return n.length>0?(l.ids&&(l.ids=[l.name]),e.helpers.each(n,l)):o(this);if(l.data&&l.ids){var r=t.createFrame(l.data);r.contextPath=t.appendContextPath(l.data.contextPath,l.name),l={data:r}}return a(n,l)})},e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}n.__esModule=!0;var o=l(14),a=l(15),r=t(a);n["default"]=function(e){e.registerHelper("each",function(e,n){function l(n,l,a){u&&(u.key=n,u.index=l,u.first=0===l,u.last=!!a,d&&(u.contextPath=d+n)),s+=t(e[n],{data:u,blockParams:o.blockParams([e[n],n],[d+n,null])})}if(!n)throw new r["default"]("Must pass iterator to #each");var t=n.fn,a=n.inverse,i=0,s="",u=void 0,d=void 0;if(n.data&&n.ids&&(d=o.appendContextPath(n.data.contextPath,n.ids[0])+"."),o.isFunction(e)&&(e=e.call(this)),n.data&&(u=o.createFrame(n.data)),e&&"object"==typeof e)if(o.isArray(e))for(var c=e.length;i<c;i++)i in e&&l(i,i,i===e.length-1);else{var m=void 0;for(var p in e)e.hasOwnProperty(p)&&(void 0!==m&&l(m,i-1),m=p,i++);void 0!==m&&l(m,i-1,!0)}return 0===i&&(s=a(this)),s})},e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}n.__esModule=!0;var o=l(15),a=t(o);n["default"]=function(e){e.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new a["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},e.exports=n["default"]},function(e,n,l){"use strict";n.__esModule=!0;var t=l(14);n["default"]=function(e){e.registerHelper("if",function(e,n){return t.isFunction(e)&&(e=e.call(this)),!n.hash.includeZero&&!e||t.isEmpty(e)?n.inverse(this):n.fn(this)}),e.registerHelper("unless",function(n,l){return e.helpers["if"].call(this,n,{fn:l.inverse,inverse:l.fn,hash:l.hash})})},e.exports=n["default"]},function(e,n){"use strict";n.__esModule=!0,n["default"]=function(e){e.registerHelper("log",function(){for(var n=[void 0],l=arguments[arguments.length-1],t=0;t<arguments.length-1;t++)n.push(arguments[t]);var o=1;null!=l.hash.level?o=l.hash.level:l.data&&null!=l.data.level&&(o=l.data.level),n[0]=o,e.log.apply(e,n)})},e.exports=n["default"]},function(e,n){"use strict";n.__esModule=!0,n["default"]=function(e){e.registerHelper("lookup",function(e,n){return e&&e[n]})},e.exports=n["default"]},function(e,n,l){"use strict";n.__esModule=!0;var t=l(14);n["default"]=function(e){e.registerHelper("with",function(e,n){t.isFunction(e)&&(e=e.call(this));var l=n.fn;if(t.isEmpty(e))return n.inverse(this);var o=n.data;return n.data&&n.ids&&(o=t.createFrame(n.data),o.contextPath=t.appendContextPath(n.data.contextPath,n.ids[0])),l(e,{data:o,blockParams:t.blockParams([e],[o&&o.contextPath])})})},e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}function o(e){r["default"](e)}n.__esModule=!0,n.registerDefaultDecorators=o;var a=l(25),r=t(a)},function(e,n,l){"use strict";n.__esModule=!0;var t=l(14);n["default"]=function(e){e.registerDecorator("inline",function(e,n,l,o){var a=e;return n.partials||(n.partials={},a=function(o,a){var r=l.partials;l.partials=t.extend({},r,n.partials);var i=e(o,a);return l.partials=r,i}),n.partials[o.args[0]]=o.fn,a})},e.exports=n["default"]},function(e,n,l){"use strict";n.__esModule=!0;var t=l(14),o={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(e){if("string"==typeof e){var n=t.indexOf(o.methodMap,e.toLowerCase());e=n>=0?n:parseInt(e,10)}return e},log:function(e){if(e=o.lookupLevel(e),"undefined"!=typeof console&&o.lookupLevel(o.level)<=e){var n=o.methodMap[e];console[n]||(n="log");for(var l=arguments.length,t=Array(l>1?l-1:0),a=1;a<l;a++)t[a-1]=arguments[a];console[n].apply(console,t)}}};n["default"]=o,e.exports=n["default"]},function(e,n){"use strict";function l(e){this.string=e}n.__esModule=!0,l.prototype.toString=l.prototype.toHTML=function(){return""+this.string},n["default"]=l,e.exports=n["default"]},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}function o(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&(n[l]=e[l]);return n["default"]=e,n}function a(e){var n=e&&e[0]||1,l=g.COMPILER_REVISION;if(n!==l){if(n<l){var t=g.REVISION_CHANGES[l],o=g.REVISION_CHANGES[n];throw new y["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+t+") or downgrade your runtime to an older version ("+o+").")}throw new y["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+e[1]+").")}}function r(e,n){function l(l,t,o){o.hash&&(t=f.extend({},t,o.hash),o.ids&&(o.ids[0]=!0)),l=n.VM.resolvePartial.call(this,l,t,o);var a=n.VM.invokePartial.call(this,l,t,o);if(null==a&&n.compile&&(o.partials[o.name]=n.compile(l,e.compilerOptions,n),a=o.partials[o.name](t,o)),null!=a){if(o.indent){for(var r=a.split("\n"),i=0,s=r.length;i<s&&(r[i]||i+1!==s);i++)r[i]=o.indent+r[i];a=r.join("\n")}return a}throw new y["default"]("The partial "+o.name+" could not be compiled when running in runtime-only mode")}function t(n){function l(n){return""+e.main(o,n,o.helpers,o.partials,r,s,i)}var a=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=a.data;t._setup(a),!a.partial&&e.useData&&(r=c(n,r));var i=void 0,s=e.useBlockParams?[]:void 0;return e.useDepths&&(i=a.depths?n!=a.depths[0]?[n].concat(a.depths):a.depths:[n]),(l=m(e.main,l,o,a.depths||[],r,s))(n,a)}if(!n)throw new y["default"]("No environment passed to template");if(!e||!e.main)throw new y["default"]("Unknown template object: "+typeof e);e.main.decorator=e.main_d,n.VM.checkRevision(e.compiler);var o={strict:function(e,n){if(!(n in e))throw new y["default"]('"'+n+'" not defined in '+e);return e[n]},lookup:function(e,n){for(var l=e.length,t=0;t<l;t++)if(e[t]&&null!=e[t][n])return e[t][n]},lambda:function(e,n){return"function"==typeof e?e.call(n):e},escapeExpression:f.escapeExpression,invokePartial:l,fn:function(n){var l=e[n];return l.decorator=e[n+"_d"],l},programs:[],program:function(e,n,l,t,o){var a=this.programs[e],r=this.fn(e);return n||o||t||l?a=i(this,e,r,n,l,t,o):a||(a=this.programs[e]=i(this,e,r)),a},data:function(e,n){for(;e&&n--;)e=e._parent;return e},merge:function(e,n){var l=e||n;return e&&n&&e!==n&&(l=f.extend({},n,e)),l},noop:n.VM.noop,compilerInfo:e.compiler};return t.isTop=!0,t._setup=function(l){l.partial?(o.helpers=l.helpers,o.partials=l.partials,o.decorators=l.decorators):(o.helpers=o.merge(l.helpers,n.helpers),e.usePartial&&(o.partials=o.merge(l.partials,n.partials)),(e.usePartial||e.useDecorators)&&(o.decorators=o.merge(l.decorators,n.decorators)))},t._child=function(n,l,t,a){if(e.useBlockParams&&!t)throw new y["default"]("must pass block params");if(e.useDepths&&!a)throw new y["default"]("must pass parent depths");return i(o,n,e[n],l,0,t,a)},t}function i(e,n,l,t,o,a,r){function i(n){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=r;return r&&n!=r[0]&&(i=[n].concat(r)),l(e,n,e.helpers,e.partials,o.data||t,a&&[o.blockParams].concat(a),i)}return i=m(l,i,e,r,t,a),i.program=n,i.depth=r?r.length:0,i.blockParams=o||0,i}function s(e,n,l){if(e)e.call||l.name||(l.name=e,e=l.partials[e]);else if("@partial-block"===l.name){for(var t=l.data;t["partial-block"]===d;)t=t._parent;e=t["partial-block"],t["partial-block"]=d}else e=l.partials[l.name];return e}function u(e,n,l){l.partial=!0,l.ids&&(l.data.contextPath=l.ids[0]||l.data.contextPath);var t=void 0;if(l.fn&&l.fn!==d&&(l.data=g.createFrame(l.data),t=l.data["partial-block"]=l.fn,t.partials&&(l.partials=f.extend({},l.partials,t.partials))),void 0===e&&t&&(e=t),void 0===e)throw new y["default"]("The partial "+l.name+" could not be found");if(e instanceof Function)return e(n,l)}function d(){return""}function c(e,n){return n&&"root"in n||(n=n?g.createFrame(n):{},n.root=e),n}function m(e,n,l,t,o,a){if(e.decorator){var r={};n=e.decorator(n,r,l,t&&t[0],o,a,t),f.extend(n,r)}return n}n.__esModule=!0,n.checkRevision=a,n.template=r,n.wrapProgram=i,n.resolvePartial=s,n.invokePartial=u,n.noop=d;var p=l(14),f=o(p),h=l(15),y=t(h),g=l(13)},function(e,n){(function(l){"use strict";n.__esModule=!0,n["default"]=function(e){var n="undefined"!=typeof l?l:window,t=n.Handlebars;e.noConflict=function(){return n.Handlebars===e&&(n.Handlebars=t),e}},e.exports=n["default"]}).call(n,function(){return this}())},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\ntopWall\n{\n    type slip;\n}\n\nleftWall\n{\n    type slip;\n}\n\nrightWall\n{\n    type slip;\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\nflowVelocity         ("+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.initialConditions:n)?i.flowVelocity:i,{name:"../../vector",hash:{},data:r}))?i:"")+");\npressure             "+(null!=(i=s(null!=(i=null!=n?n.initialConditions:n)?i.pressure:i,n))?i:"")+";\nturbulentKE          "+(null!=(i=s(null!=(i=null!=n?n.initialConditions:n)?i.turbulentKE:i,n))?i:"")+";\nturbulentOmega       "+(null!=(i=s(null!=(i=null!=n?n.initialConditions:n)?i.turbulentOmega:i,n))?i:"")+";\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n){"use strict";e.exports=function(e){return e.join(" ")}},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      k;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.k:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+'];\n\ninternalField   uniform $turbulentKE;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    //- Define inlet conditions\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      $internalField;\n        value           $internalField;\n    }\n\n    //- This should probably be on a condition\n    bottomWall\n    {\n        type            kqRWallFunction;\n        value           $internalField;\n    }\n\n    '+(null!=(i=e.lambda(null!=n?n.meshGroupName:n,n))?i:"")+'\n    {\n        type            kqRWallFunction;\n        value           $internalField;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    location    "0";\n    object      nut;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\ndimensions      ['+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.nut:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+'];\n\ninternalField   uniform 0;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    leftWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    rightWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    inlet\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    outlet\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    bottomWall\n    {\n        type            nutkWallFunction;\n        value           uniform 0;\n    }\n\n    topWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    '+(null!=(i=e.lambda(null!=n?n.meshGroupName:n,n))?i:"")+"\n    {\n        type            nutkWallFunction;\n        value           uniform 0;\n    }\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      omega;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.omega:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+'];\n\ninternalField   uniform $turbulentOmega;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      $internalField;\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            omegaWallFunction;\n        value           $internalField;\n    }\n\n    '+(null!=(i=e.lambda(null!=n?n.meshGroupName:n,n))?i:"")+'\n    {\n        type            omegaWallFunction;\n        value           $internalField;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      p;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.p:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+'];\n\ninternalField   uniform $pressure;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    inlet\n    {\n        type            zeroGradient;\n    }\n\n    outlet\n    {\n        type            fixedValue;\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            zeroGradient;\n    }\n\n    '+(null!=(i=e.lambda(null!=n?n.meshGroupName:n,n))?i:"")+'\n    {\n        type            zeroGradient;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=null!=n?n:{};return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volVectorField;\n    location    "0";\n    object      U;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(i=t(l(32)).call(s,null!=(i=null!=n?n.U:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+'];\n\ninternalField   uniform $flowVelocity;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      uniform ('+(null!=(i=t(l(32)).call(s,null!=(i=null!=n?n.U:n)?i.inletValue:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            fixedValue;\n        value           $internalField;\n    }\n\n    "+(null!=(i=e.lambda(null!=n?n.meshGroupName:n,n))?i:"")+'\n    {\n        type            noSlip;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      transportProperties;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\ntransportModel  "+(null!=(i=s(null!=(i=null!=n?n.transport:n)?i.model:i,n))?i:"")+";\n\nnu              ["+(null!=(i=t(l(32)).call(null!=n?n:{},null!=(i=null!=n?n.transport:n)?i.dimensions:i,{name:"../vector",hash:{},data:r}))?i:"")+"] "+(null!=(i=s(null!=(i=null!=n?n.transport:n)?i.epsilon:i,n))?i:"")+";\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      turbulenceProperties;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nsimulationType RAS;\n\nRAS\n{\n    RASModel            kOmegaSST;\n\n    turbulence          on;\n\n    printCoeffs         on;\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=null!=n?n:{},u=e.escapeExpression,d=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      blockMeshDict;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nconvertToMeters 1;\n\nvertices\n(\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,0,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,2,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,4,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,1,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,2,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,4,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,1,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,3,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,4,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,0,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,3,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,4,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,0,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,2,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,5,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,1,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,2,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,5,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,1,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,3,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,5,{name:"../item",hash:{},data:r}))+")\n    ("+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,0,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,3,{name:"../item",hash:{},data:r}))+" "+u(t(l(41)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,5,{name:"../item",hash:{},data:r}))+")\n);\n\nblocks\n(\n    hex (0 1 2 3 4 5 6 7) ("+(null!=(i=t(l(42)).call(s,null!=(i=null!=n?n.tunnel:n)?i.bounds:i,{name:"../delta",hash:{},data:r}))?i:"")+") simpleGrading ("+(null!=(i=t(l(32)).call(s,null!=(i=null!=n?n.tunnel:n)?i.simpleGrading:i,{name:"../vector",hash:{},data:r}))?i:"")+")\n);\n\nedges\n(\n);\n\nboundary\n(\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.x:i)?i.plus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (2 6 5 1)\n        )\n    }\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.x:i)?i.minus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (0 4 7 3)\n        )\n    }\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.y:i)?i.plus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (3 7 6 2)\n        )\n    }\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.y:i)?i.minus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (1 5 4 0)\n        )\n    }\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.z:i)?i.plus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (4 5 6 7)\n        )\n    }\n    "+(null!=(i=d(null!=(i=null!=(i=null!=n?n.walls:n)?i.z:i)?i.minus:i,n))?i:"")+"\n    {\n        type patch;\n        faces\n        (\n          (0 3 2 1)\n        )\n    }\n);\n\n// ************************************************************************* //\n";
},useData:!0})},function(e,n){"use strict";e.exports=function(e,n){return e[n]}},function(e,n){"use strict";e.exports=function(e){return[e[1]-e[0],e[3]-e[2],e[5]-e[4]].join(" ")}},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a,r=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      controlDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\napplication     simpleFoam;\n\nstartFrom       latestTime;\n\nstartTime       "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.startTime:a,n))?a:"")+";\n\nstopAt          endTime;\n\nendTime         "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.endTime:a,n))?a:"")+";\n\ndeltaT          "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.deltaT:a,n))?a:"")+";\n\nwriteControl    "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.writeControl:a,n))?a:"")+";\n\nwriteInterval   "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.writeInterval:a,n))?a:"")+";\n\npurgeWrite      "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.purgeWrite:a,n))?a:"")+";\n\nwriteFormat     "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.writeFormat:a,n))?a:"")+";\n\nwritePrecision  "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.writePrecision:a,n))?a:"")+";\n\nwriteCompression "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.writeCompression:a,n))?a:"")+";\n\ntimeFormat      "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.timeFormat:a,n))?a:"")+";\n\ntimePrecision   "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.timePrecision:a,n))?a:"")+";\n\nrunTimeModifiable "+(null!=(a=r(null!=(a=null!=n?n.controls:n)?a.runTimeModifiable:a,n))?a:"")+';\n\nfunctions\n{\n    #include "forceCoeffs"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=e.lambda,u=null!=n?n:{};return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      decomposeParDict;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nnumberOfSubdomains "+(null!=(i=s(null!=(i=null!=n?n.decompose:n)?i.numberOfSubdomains:i,n))?i:"")+";\n\nmethod          "+(null!=(i=s(null!=(i=null!=n?n.decompose:n)?i.method:i,n))?i:"")+";\n\nsimpleCoeffs\n{\n    n               ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=(i=null!=n?n.decompose:n)?i.simpleCoeffs:i)?i.n:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    delta           "+(null!=(i=s(null!=(i=null!=(i=null!=n?n.decompose:n)?i.simpleCoeffs:i)?i.delta:i,n))?i:"")+";\n}\n\nhierarchicalCoeffs\n{\n    n               ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=(i=null!=n?n.decompose:n)?i.hierarchicalCoeffs:i)?i.n:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    delta           "+(null!=(i=s(null!=(i=null!=(i=null!=n?n.decompose:n)?i.hierarchicalCoeffs:i)?i.delta:i,n))?i:"")+";\n    order           "+(null!=(i=s(null!=(i=null!=(i=null!=n?n.decompose:n)?i.hierarchicalCoeffs:i)?i.order:i,n))?i:"")+';\n}\n\nmanualCoeffs\n{\n    dataFile        "cellDecomposition";\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=e.lambda,u=null!=n?n:{};return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\nforceCoeffs1\n{\n    type        forceCoeffs;\n\n    libs ( "libforces.so" );\n\n    writeControl   '+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.writeControl:i,n))?i:"")+";\n    timeInterval   "+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.timeInterval:i,n))?i:"")+";\n\n    log            "+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.log:i,n))?i:"")+";\n\n    patches     ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=n?n.forceCoeffs:n)?i.patches:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    rho         rhoInf;      // Indicates incompressible\n    rhoInf      1;           // Redundant for incompressible\n    liftDir     ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=n?n.forceCoeffs:n)?i.liftDir:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    dragDir     ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=n?n.forceCoeffs:n)?i.dragDir:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    CofR        ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=n?n.forceCoeffs:n)?i.CofR:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    pitchAxis   ("+(null!=(i=t(l(32)).call(u,null!=(i=null!=n?n.forceCoeffs:n)?i.pitchAxis:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    magUInf     "+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.magUInf:i,n))?i:"")+";\n    lRef        "+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.lRef:i,n))?i:"")+";\n    Aref        "+(null!=(i=s(null!=(i=null!=n?n.forceCoeffs:n)?i.Aref:i,n))?i:"")+";\n    /*\n    binData\n    {\n        nBin        20;          // output data into 20 bins\n        direction   (1 0 0);     // bin direction\n        cumulative  yes;\n    }\n    */\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      fvSchemes;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nddtSchemes\n{\n    default         steadyState;\n}\n\ngradSchemes\n{\n    default         Gauss linear;\n    grad(U)         cellLimited Gauss linear 1;\n}\n\ndivSchemes\n{\n    default         none;\n    div(phi,U)      bounded Gauss linearUpwindV grad(U);\n    div(phi,k)      bounded Gauss upwind;\n    div(phi,omega)  bounded Gauss upwind;\n    div((nuEff*dev2(T(grad(U))))) Gauss linear;\n}\n\nlaplacianSchemes\n{\n    default         Gauss linear corrected;\n}\n\ninterpolationSchemes\n{\n    default         linear;\n}\n\nsnGradSchemes\n{\n    default         corrected;\n}\n\nwallDist\n{\n    method meshWave;\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a,r=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      fvSolution;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nsolvers\n{\n    p\n    {\n        solver           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.solver:a,n))?a:"")+";\n        tolerance        "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.relTol:a,n))?a:"")+";\n        smoother         "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.smoother:a,n))?a:"")+";\n    }\n\n    Phi\n    {\n        $p;\n    }\n\n    U\n    {\n        solver           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.nSweeps:a,n))?a:"")+";\n    }\n\n    k\n    {\n        solver           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.nSweeps:a,n))?a:"")+";\n    }\n\n    omega\n    {\n        solver           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.nSweeps:a,n))?a:"")+";\n    }\n}\n\nSIMPLE\n{\n    nNonOrthogonalCorrectors  "+(null!=(a=r(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.simple:a)?a.nNonOrthogonalCorrectors:a,n))?a:"")+";\n    consistent                "+(null!=(a=r(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.simple:a)?a.consistent:a,n))?a:"")+";\n}\n\npotentialFlow\n{\n    nNonOrthogonalCorrectors  "+(null!=(a=r(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.potentialFlow:a)?a.nNonOrthogonalCorrectors:a,n))?a:"")+";\n}\n\nrelaxationFactors\n{\n    equations\n    {\n        U               "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.U:a,n))?a:"")+";\n        k               "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.k:a,n))?a:"")+";\n        omega           "+(null!=(a=r(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.omega:a,n))?a:"")+";\n    }\n}\n\ncache\n{\n    grad(U);\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      meshQualityDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n// Include defaults parameters from master dictionary\n#includeEtc "caseDicts/meshQualityDict"\n\n//- minFaceWeight (0 -> 0.5)\nminFaceWeight   '+(null!=(a=e.lambda(null!=(a=null!=n?n.meshQuality:n)?a.minFaceWeight:a,n))?a:"")+";\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){function t(e){return e&&(e.__esModule?e["default"]:e)}var o=l(11);e.exports=(o["default"]||o).template({1:function(e,n,l,t,o){var a;return(null!=(a=e.lambda(n,n))?a:"")+" true;\n"},compiler:[7,">= 4.0.0"],main:function(e,n,o,a,r){var i,s=null!=n?n:{},u=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      snappyHexMeshDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n// Which of the steps to run\n"+(null!=(i=o.each.call(s,null!=(i=null!=n?n.hexMesh:n)?i.steps:i,{name:"each",hash:{},fn:e.program(1,r,0),inverse:e.noop,data:r}))?i:"")+"\n// Geometry. Definition of all surfaces. All surfaces are of class\n// searchableSurface.\n// Surfaces are used\n// - to specify refinement for any mesh cell intersecting it\n// - to specify refinement for any mesh cell inside/outside/near\n// - to 'snap' the mesh boundary to the surface\ngeometry\n{\n    "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.name:i,n))?i:"")+".obj\n    {\n        type triSurfaceMesh;\n        name "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.name:i,n))?i:"")+";\n    }\n\n    refinementBox\n    {\n        type "+(null!=(i=u(null!=(i=null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.refinementBox:i)?i.type:i,n))?i:"")+";\n        min ("+(null!=(i=t(l(32)).call(s,null!=(i=null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.refinementBox:i)?i.min:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n        max ("+(null!=(i=t(l(32)).call(s,null!=(i=null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.refinementBox:i)?i.max:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n    }\n};\n\n\n\n// Settings for the castellatedMesh generation.\ncastellatedMeshControls\n{\n\n    // Refinement parameters\n    // ~~~~~~~~~~~~~~~~~~~~~\n\n    // If local number of cells is >= maxLocalCells on any processor\n    // switches from from refinement followed by balancing\n    // (current method) to (weighted) balancing before refinement.\n    maxLocalCells "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.maxLocalCells:i,n))?i:"")+";\n\n    // Overall cell limit (approximately). Refinement will stop immediately\n    // upon reaching this number so a refinement level might not complete.\n    // Note that this is the number of cells before removing the part which\n    // is not 'visible' from the keepPoint. The final number of cells might\n    // actually be a lot less.\n    maxGlobalCells "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.maxGlobalCells:i,n))?i:"")+";\n\n    // The surface refinement loop might spend lots of iterations refining just a\n    // few cells. This setting will cause refinement to stop if <= minimumRefine\n    // are selected for refinement. Note: it will at least do one iteration\n    // (unless the number of cells to refine is 0)\n    minRefinementCells "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.minRefinementCells:i,n))?i:"")+";\n\n    // Allow a certain level of imbalance during refining\n    // (since balancing is quite expensive)\n    // Expressed as fraction of perfect balance (= overall number of cells /\n    // nProcs). 0=balance always.\n    maxLoadUnbalance "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.maxLoadUnbalance:i,n))?i:"")+";\n\n\n    // Number of buffer layers between different levels.\n    // 1 means normal 2:1 refinement restriction, larger means slower\n    // refinement.\n    nCellsBetweenLevels "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.nCellsBetweenLevels:i,n))?i:"")+';\n\n\n\n    // Explicit feature edge refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies a level for any cell intersected by its edges.\n    // This is a featureEdgeMesh, read from constant/triSurface for now.\n    features\n    (\n        {\n            file "'+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.name:i,n))?i:"")+".eMesh\";\n            level 6;\n        }\n    );\n\n\n\n    // Surface based refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies two levels for every surface. The first is the minimum level,\n    // every cell intersecting a surface gets refined up to the minimum level.\n    // The second level is the maximum level. Cells that 'see' multiple\n    // intersections where the intersections make an\n    // angle > resolveFeatureAngle get refined up to the maximum level.\n\n    refinementSurfaces\n    {\n        "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.geometry:i)?i.name:i,n))?i:"")+"\n        {\n            // Surface-wise min and max refinement level\n            level (5 6);\n\n            // Optional specification of patch type (default is wall). No\n            // constraint types (cyclic, symmetry) etc. are allowed.\n            patchInfo\n            {\n                type wall;\n                inGroups ("+(null!=(i=u(null!=n?n.meshGroupName:n,n))?i:"")+");\n            }\n        }\n    }\n\n    // Resolve sharp angles\n    resolveFeatureAngle "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.resolveFeatureAngle:i,n))?i:"")+";\n\n\n    // Region-wise refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies refinement level for cells in relation to a surface. One of\n    // three modes\n    // - distance. 'levels' specifies per distance to the surface the\n    //   wanted refinement level. The distances need to be specified in\n    //   descending order.\n    // - inside. 'levels' is only one entry and only the level is used. All\n    //   cells inside the surface get refined up to the level. The surface\n    //   needs to be closed for this to be possible.\n    // - outside. Same but cells outside.\n\n    refinementRegions\n    {\n        refinementBox\n        {\n            mode inside;\n            levels ((1E15 4));\n        }\n    }\n\n\n    // Mesh selection\n    // ~~~~~~~~~~~~~~\n\n    // After refinement patches get added for all refinementSurfaces and\n    // all cells intersecting the surfaces get put into these patches. The\n    // section reachable from the locationInMesh is kept.\n    // NOTE: This point should never be on a face, always inside a cell, even\n    // after refinement.\n    locationInMesh ("+(null!=(i=t(l(32)).call(s,null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.locationInMesh:i,{name:"../vector",hash:{},data:r}))?i:"")+");\n\n\n    // Whether any faceZones (as specified in the refinementSurfaces)\n    // are only on the boundary of corresponding cellZones or also allow\n    // free-standing zone faces. Not used if there are no faceZones.\n    allowFreeStandingZoneFaces "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.castellatedMeshControls:i)?i.allowFreeStandingZoneFaces:i,n))?i:"")+";\n}\n\n\n\n// Settings for the snapping.\nsnapControls\n{\n    //- Number of patch smoothing iterations before finding correspondence\n    //  to surface\n    nSmoothPatch "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.nSmoothPatch:i,n))?i:"")+";\n\n    //- Relative distance for points to be attracted by surface feature point\n    //  or edge. True distance is this factor times local\n    //  maximum edge length.\n    tolerance "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.tolerance:i,n))?i:"")+";\n\n    //- Number of mesh displacement relaxation iterations.\n    nSolveIter "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.nSolveIter:i,n))?i:"")+";\n\n    //- Maximum number of snapping relaxation iterations. Should stop\n    //  before upon reaching a correct mesh.\n    nRelaxIter "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.nRelaxIter:i,n))?i:"")+";\n\n    // Feature snapping\n\n        //- Number of feature edge snapping iterations.\n        //  Leave out altogether to disable.\n        nFeatureSnapIter "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.nFeatureSnapIter:i,n))?i:"")+";\n\n        //- Detect (geometric only) features by sampling the surface\n        //  (default=false).\n        implicitFeatureSnap "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.implicitFeatureSnap:i,n))?i:"")+";\n\n        //- Use castellatedMeshControls::features (default = true)\n        explicitFeatureSnap "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.explicitFeatureSnap:i,n))?i:"")+";\n\n        //- Detect points on multiple surfaces (only for explicitFeatureSnap)\n        multiRegionFeatureSnap "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.snapControls:i)?i.multiRegionFeatureSnap:i,n))?i:"")+";\n}\n\n\n\n// Settings for the layer addition.\naddLayersControls\n{\n    // Are the thickness parameters below relative to the undistorted\n    // size of the refined cell outside layer (true) or absolute sizes (false).\n    relativeSizes "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.relativeSizes:i,n))?i:"")+';\n\n    // Per final patch (so not geometry!) the layer information\n    layers\n    {\n        "(bottomWall|'+(null!=(i=u(null!=n?n.meshGroupName:n,n))?i:"")+').*"\n        {\n            nSurfaceLayers 1;\n        }\n    }\n\n    // Expansion factor for layer mesh\n    expansionRatio '+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.expansionRatio:i,n))?i:"")+";\n\n    // Wanted thickness of final added cell layer. If multiple layers\n    // is the thickness of the layer furthest away from the wall.\n    // Relative to undistorted size of cell outside layer.\n    // See relativeSizes parameter.\n    finalLayerThickness "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.finalLayerThickness:i,n))?i:"")+";\n\n    // Minimum thickness of cell layer. If for any reason layer\n    // cannot be above minThickness do not add layer.\n    // Relative to undistorted size of cell outside layer.\n    minThickness "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.minThickness:i,n))?i:"")+";\n\n    // If points get not extruded do nGrow layers of connected faces that are\n    // also not grown. This helps convergence of the layer addition process\n    // close to features.\n    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)\n    nGrow "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nGrow:i,n))?i:"")+";\n\n    // Advanced settings\n\n    // When not to extrude surface. 0 is flat surface, 90 is when two faces\n    // are perpendicular\n    featureAngle "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.featureAngle:i,n))?i:"")+";\n\n    // At non-patched sides allow mesh to slip if extrusion direction makes\n    // angle larger than slipFeatureAngle.\n    slipFeatureAngle "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.slipFeatureAngle:i,n))?i:"")+";\n\n    // Maximum number of snapping relaxation iterations. Should stop\n    // before upon reaching a correct mesh.\n    nRelaxIter "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nRelaxIter:i,n))?i:"")+";\n\n    // Number of smoothing iterations of surface normals\n    nSmoothSurfaceNormals "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nSmoothSurfaceNormals:i,n))?i:"")+";\n\n    // Number of smoothing iterations of interior mesh movement direction\n    nSmoothNormals "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nSmoothNormals:i,n))?i:"")+";\n\n    // Smooth layer thickness over surface patches\n    nSmoothThickness "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nSmoothThickness:i,n))?i:"")+";\n\n    // Stop layer growth on highly warped cells\n    maxFaceThicknessRatio "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.maxFaceThicknessRatio:i,n))?i:"")+";\n\n    // Reduce layer growth where ratio thickness to medial\n    // distance is large\n    maxThicknessToMedialRatio "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.maxThicknessToMedialRatio:i,n))?i:"")+";\n\n    // Angle used to pick up medial axis points\n    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.\n    minMedianAxisAngle "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.minMedianAxisAngle:i,n))?i:"")+";\n\n\n    // Create buffer region for new layer terminations\n    nBufferCellsNoExtrude "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nBufferCellsNoExtrude:i,n))?i:"")+";\n\n\n    // Overall max number of layer addition iterations. The mesher will exit\n    // if it reaches this number of iterations; possibly with an illegal\n    // mesh.\n    nLayerIter "+(null!=(i=u(null!=(i=null!=(i=null!=n?n.hexMesh:n)?i.addLayersControls:i)?i.nLayerIter:i,n))?i:"")+';\n}\n\n\n\n// Generic mesh quality settings. At any undoable phase these determine\n// where to undo.\nmeshQualityControls\n{\n    #include "meshQualityDict"\n\n\n    // Advanced\n\n    //- Number of error distribution iterations\n    nSmoothScale 4;\n    //- Amount to scale back displacement at error points\n    errorReduction 0.75;\n}\n\n\n// Advanced\n\n// Write flags\nwriteFlags\n(\n    scalarLevels\n    layerSets\n    layerFields     // write volScalarField for layer coverage\n);\n\n\n// Merge tolerance. Is fraction of overall bounding box of initial mesh.\n// Note: the write tolerance needs to be higher than this.\nmergeTolerance 1e-6;\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      surfaceFeatureExtractDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n"+(null!=(a=e.lambda(null!=(a=null!=(a=null!=n?n.hexMesh:n)?a.geometry:a)?a.name:a,n))?a:"")+".obj\n{\n    // How to obtain raw features (extractFromFile || extractFromSurface)\n    extractionMethod    extractFromSurface;\n\n    extractFromSurfaceCoeffs\n    {\n        // Mark edges whose adjacent surface normals are at an angle less\n        // than includedAngle as features\n        // - 0  : selects no edges\n        // - 180: selects all edges\n        includedAngle   150;\n    }\n\n    subsetFeatures\n    {\n        // Keep nonManifold edges (edges with >2 connected faces)\n        nonManifoldEdges       no;\n\n        // Keep open edges (edges with 1 connected face)\n        openEdges       yes;\n    }\n\n\n    // Write options\n\n        // Write features to obj format for postprocessing\n        writeObj                yes;\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"#!/bin/sh\n\n# Source tutorial clean functions\n. $WM_PROJECT_DIR/bin/tools/CleanFunctions\n\n# remove surface and features\nrm -rf constant/extendedFeatureEdgeMesh > /dev/null 2>&1\nrm -f constant/triSurface/mesh.eMesh > /dev/null 2>&1\n\nrm -rf 0 > /dev/null 2>&1\n\ncleanCase\n"},useData:!0})},function(e,n,l){var t=l(11);e.exports=(t["default"]||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return"#!/bin/sh\ncd ${0%/*} || exit 1    # Run from this directory\n\n# Source tutorial run functions\n. $WM_PROJECT_DIR/bin/tools/RunFunctions\n\n# copy mesh surface from root directory\nmkdir -p ./constant/triSurface\ncp "+(null!=(a=e.lambda(null!=(a=null!=(a=null!=n?n.hexMesh:n)?a.geometry:a)?a.name:a,n))?a:"")+".obj ./constant/triSurface/\n\nrunApplication surfaceFeatureExtract\n\nrunApplication blockMesh\n\nrunApplication decomposePar\nrunParallel snappyHexMesh -overwrite\n\n#- For non-parallel running\n#cp -r 0.orig 0 > /dev/null 2>&1\n\n#- For parallel running\nls -d processor* | xargs -I {} rm -rf ./{}/0\nls -d processor* | xargs -I {} cp -r 0.orig ./{}/0\n\nrunParallel patchSummary\nrunParallel potentialFoam\nrunParallel $(getApplication)\n\nrunApplication reconstructParMesh -constant\nrunApplication reconstructPar -latestTime\n\n#------------------------------------------------------------------------------\n";
},useData:!0})}]);